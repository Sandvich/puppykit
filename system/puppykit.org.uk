server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name puppykit.org.uk www.puppykit.org.uk;

    location ~ /(.git*|system/*|Dockerfile) {
        deny all;
        return 404;
    }
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass http://localhost:8080;
    }

    ssl_certificate /etc/letsencrypt/live/puppykit.org.uk/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/puppykit.org.uk/privkey.pem; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # The following is from https://cipherli.st/, and modified to my requirements
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:1m;
    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
    resolver 208.67.222.222 208.67.220.220 valid=300s; # OpenDNS
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
}

server {
	if ($host = www.puppykit.org.uk) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	if ($host = puppykit.org.uk) {
		return 301 https://$host$request_uri;
	} # managed by Certbot

	listen 80;
	listen [::]:80;
	server_name puppykit.org.uk www.puppykit.org.uk;

	return 404;
}
